
/*
 * This file was generated by the SOM Compiler.
 * FileName: vpobj.h.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emith: 1.11
 */

#ifndef vpobj_h
#define vpobj_h


/*
 * Passthru lines: File: "C.h", "before"
 */

#ifndef REXXSAA_INCLUDED
#define INCL_REXXSAA
#include <rexxsaa.h>                   /* needed for RexxStart()     */
#endif

#define MAXNUMEVENTS          32

#define WM_VPRSETVALUES   WM_USER

typedef struct _FORMEVENTSTRUCT {
   ULONG msg;
   PSZ   pszEventName;
   PSZ   pszAbbrevName;
   PSZ   pszModel;
   HPOINTER hptrIcon;
} FORMEVENTSTRUCT;
typedef FORMEVENTSTRUCT *PFORMEVENTSTRUCT;

typedef struct _VPEVENTITEM {
  PSZ pszDescName;    /* Descriptive name for the event */
  PSZ pszAbbrevName;  /* abbrev name for the object, ie. 1CLK */
  PSZ pszModel;       /* reserved must be zero */
  ULONG useFlags;     /* reserved must be zero */
  LONG lIconResID;    /* pointer resource id for the event */
  LONG lHelpID;       /* reserved */
  HPOINTER hptrIcon;  /* reserved */
} VPEVENTITEM;
typedef VPEVENTITEM *PVPEVENTITEM;

typedef struct _VPLOGICITEM {
  LONG lHelpID;        /* help panel id for the Create Link... item */
  PSZ pszDescName;     /* descriptive name for the REXX extension */
  PSZ pszModel;        /* function call prototype */
  ULONG menuUseFlags;  /* reserved */
  ULONG useFlags;      /* reserved */
  } VPLOGICITEM;
typedef VPLOGICITEM *PVPLOGICITEM;

typedef struct _VPCLASSINFO {
   ULONG cbSize;
   PSZ   pszDescName;        /* descriptive name of object              */
   PSZ   pszAbbrevName;      /* abbreviated name for the object, ie. PB */
   BOOL  bHasText;           /* does the object support direct editing  */
   PSZ   pszDefaultText;     /* default text for controls that have it  */
   BOOL  bHasCtrlData;       /* does the object have create data        */
   PSZ   pszWindowClass;     /* WC_* or the registered class name       */
   LONG  lDefaultWidth;      /* default width for a new object          */
   LONG  lDefaultHeight;     /* default height for a new object         */
   ULONG ulDefaultStyle;     /* default window style for a new object   */
   PVOID pDefaultCtrlData;   /* pointer to default control data         */
   HMODULE hModResource;     /* module handle for resource file         */
   LONG  lIconResID;         /* pointer resource id for the object      */
   LONG  lStyleDlgID;        /* style dialog id for the styles page     */
   PFNWP pfnwpStyleDlgProc;  /* address of the dialog style dialog proc */
   LONG  lToolHelpID;        /* id for the tool help                    */
   LONG  lStylesPageHelpID;  /* id for the styles notebook help         */
   HWND  hwndHelpInstance;   /* handle for the help instance            */
   LONG  lNumEvents;         /* number of events defined for this class */
   VPEVENTITEM Events[MAXNUMEVENTS];   /* event table for custom events */
   ULONG usTranslate[MAXNUMEVENTS]; //notification ids for each event wm_control
                             //unused entries hold 0
   PVPLOGICITEM Logic;       /* logic models for linking                */
   HPOINTER hptrIcon;        /* reserved                                */
   HPOINTER hptrMouse;       /* reserved                                */
   ULONG  ulReserved;        /* reserved                                */
   ULONG  ulReserved2;       /* reserved                                */

   } VPCLASSINFO;
typedef VPCLASSINFO *PVPCLASSINFO;


LONG TranslateObjSymbol(HWND hwnd, PSZ pszSymbol);


#include <som.h>

/*
 * Define the class name as an object type
 */
#ifndef VPObj
#define VPObj SOMAny
#endif
#include <somobj.h>

#define VPObj_MajorVersion 1
#define VPObj_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define VPObjNewClass c
#pragma linkage(c, system)
#define VPObjClassData d
#define VPObjCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define VPObj_classObj VPObjClassData.classObject
#define _VPObj VPObj_classObj

/*
 * New and Renew macros for VPObj
 */
#define _VPObjNew() (_somNew(VPObjClassData.classObject))
#define VPObjNew() \
	( VPObjClassData.classObject \
		? _VPObjNew() \
		: ( VPObjNewClass(VPObj_MajorVersion, VPObj_MinorVersion), _VPObjNew() ) )
#define VPObjRenew(buf) \
	( _somRenew(VPObjClassData.classObject, buf) )

/*
 * New Method: GetHwnd
 */
typedef HWND    SOMLINK somTP_VPObj_GetHwnd(VPObj *somSelf);
#pragma linkage(somTP_VPObj_GetHwnd, system)
typedef somTP_VPObj_GetHwnd *somTD_VPObj_GetHwnd;
#define somMD_VPObj_GetHwnd "----"
#define VPObj_GetHwnd(somSelf) \
    (SOM_Resolve(somSelf, VPObj, GetHwnd) \
	(somSelf))
#define _GetHwnd VPObj_GetHwnd

/*
 * New Method: IndicateChanged
 */
typedef VOID    SOMLINK somTP_VPObj_IndicateChanged(VPObj *somSelf);
#pragma linkage(somTP_VPObj_IndicateChanged, system)
typedef somTP_VPObj_IndicateChanged *somTD_VPObj_IndicateChanged;
#define somMD_VPObj_IndicateChanged "----"
#define VPObj_IndicateChanged(somSelf) \
    (SOM_Resolve(somSelf, VPObj, IndicateChanged) \
	(somSelf))
#define _IndicateChanged VPObj_IndicateChanged

/*
 * New Method: RedrawObject
 */
typedef VOID    SOMLINK somTP_VPObj_RedrawObject(VPObj *somSelf);
#pragma linkage(somTP_VPObj_RedrawObject, system)
typedef somTP_VPObj_RedrawObject *somTD_VPObj_RedrawObject;
#define somMD_VPObj_RedrawObject "----"
#define VPObj_RedrawObject(somSelf) \
    (SOM_Resolve(somSelf, VPObj, RedrawObject) \
	(somSelf))
#define _RedrawObject VPObj_RedrawObject

/*
 * New Method: RecreateObject
 */
typedef VOID    SOMLINK somTP_VPObj_RecreateObject(VPObj *somSelf);
#pragma linkage(somTP_VPObj_RecreateObject, system)
typedef somTP_VPObj_RecreateObject *somTD_VPObj_RecreateObject;
#define somMD_VPObj_RecreateObject "----"
#define VPObj_RecreateObject(somSelf) \
    (SOM_Resolve(somSelf, VPObj, RecreateObject) \
	(somSelf))
#define _RecreateObject VPObj_RecreateObject

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMAny * SOMLINK VPObjNewClass(integer4 scemajorVersion,
		integer4 sceminorVersion);
#pragma linkage(VPObjNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct VPObjClassDataStructure {
	SOMAny *classObject;
	somMToken pControl;
	somMToken pControlRun;
	somMToken pWndInfo;
	somMToken pRunInfo;
	somMToken GetHwnd;
	somMToken IndicateChanged;
	somMToken SetRuntimeInfo;
	somMToken SetEditorInfo;
	somMToken RedrawObject;
	somMToken RecreateObject;
} VPObjClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct VPObjCClassDataStructure {
	somMethodTab *parentMtab;
	somDToken instanceDataToken;
} VPObjCClassData;

#endif       /* vpobj_h */

/*
 * This file was generated by the SOM Compiler.
 * FileName: vpobj.h.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emith: 1.11
 */

#ifndef vpobj_mh
#define vpobj_mh


/*
 * Define the class name as an object type
 */
#ifndef M_VPObj
#define M_VPObj SOMAny
#endif

#define M_VPObj_MajorVersion 1
#define M_VPObj_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define M_VPObjNewClass c
#pragma linkage(c, system)
#define M_VPObjClassData d
#define M_VPObjCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define M_VPObj_classObj M_VPObjClassData.classObject
#define _M_VPObj M_VPObj_classObj

/*
 * New and Renew macros for M_VPObj
 */
#define _M_VPObjNew() (_somNew(M_VPObjClassData.classObject))
#define M_VPObjNew() \
	( M_VPObjClassData.classObject \
		? _M_VPObjNew() \
		: ( M_VPObjNewClass(M_VPObj_MajorVersion, M_VPObj_MinorVersion), _M_VPObjNew() ) )
#define M_VPObjRenew(buf) \
	( _somRenew(M_VPObjClassData.classObject, buf) )

/*
 * Override method: somInitClass
 */
#define M_VPObj_somInitClass(somSelf,className,parentClass,instanceSize,maxStaticMethods,majorVersion,minorVersion) \
	SOMClass_somInitClass(somSelf,className,parentClass,instanceSize,maxStaticMethods,majorVersion,minorVersion)

/*
 * New Method: InitHelpInstance
 */
typedef HWND    SOMLINK somTP_M_VPObj_InitHelpInstance(M_VPObj *somSelf);
#pragma linkage(somTP_M_VPObj_InitHelpInstance, system)
typedef somTP_M_VPObj_InitHelpInstance *somTD_M_VPObj_InitHelpInstance;
#define somMD_M_VPObj_InitHelpInstance "----"
#define M_VPObj_InitHelpInstance(somSelf) \
    (SOM_Resolve(somSelf, M_VPObj, InitHelpInstance) \
	(somSelf))
#define _InitHelpInstance M_VPObj_InitHelpInstance

/*
 * New Method: QueryClassInfo
 */
typedef VOID    SOMLINK somTP_M_VPObj_QueryClassInfo(M_VPObj *somSelf,
		PVPCLASSINFO pVpClassInfo);
#pragma linkage(somTP_M_VPObj_QueryClassInfo, system)
typedef somTP_M_VPObj_QueryClassInfo *somTD_M_VPObj_QueryClassInfo;
#define somMD_M_VPObj_QueryClassInfo "----"
#define M_VPObj_QueryClassInfo(somSelf,pVpClassInfo) \
    (SOM_Resolve(somSelf, M_VPObj, QueryClassInfo) \
	(somSelf,pVpClassInfo))
#define _QueryClassInfo M_VPObj_QueryClassInfo

/*
 * New Method: QueryHelpInstance
 */
typedef HWND    SOMLINK somTP_M_VPObj_QueryHelpInstance(M_VPObj *somSelf);
#pragma linkage(somTP_M_VPObj_QueryHelpInstance, system)
typedef somTP_M_VPObj_QueryHelpInstance *somTD_M_VPObj_QueryHelpInstance;
#define somMD_M_VPObj_QueryHelpInstance "----"
#define M_VPObj_QueryHelpInstance(somSelf) \
    (SOM_Resolve(somSelf, M_VPObj, QueryHelpInstance) \
	(somSelf))
#define _QueryHelpInstance M_VPObj_QueryHelpInstance

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMAny * SOMLINK M_VPObjNewClass(integer4 scemajorVersion,
		integer4 sceminorVersion);
#pragma linkage(M_VPObjNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct M_VPObjClassDataStructure {
	SOMAny *classObject;
	somMToken InitHelpInstance;
	somMToken QueryClassInfo;
	somMToken QueryHelpInstance;
	somMToken SetHelpInstance;
} M_VPObjClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct M_VPObjCClassDataStructure {
	somMethodTab *parentMtab;
	somDToken instanceDataToken;
} M_VPObjCClassData;

#endif       /* vpobj_h */
