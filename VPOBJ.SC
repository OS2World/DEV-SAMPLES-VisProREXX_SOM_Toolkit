
# This file was generated by the SOM Compiler.
# FileName: vpobj.sc.
# Generated using:
#     SOM Precompiler spc: 1.22
#     SOM Emitter emitcsc: 1.10
#include <somobj.sc>

class: VPObj, 
    file stem = vpobj, external prefix = vpr_, class prefix = vprc_, 
    major version = 1, minor version = 1, local;


parent class: SOMObject;


release order:
    pControl, pControlRun, pWndInfo, 
    pRunInfo, GetHwnd, IndicateChanged, 
    SetRuntimeInfo, SetEditorInfo, RedrawObject, 
    RecreateObject, InitHelpInstance, QueryClassInfo, 
    QueryHelpInstance, SetHelpInstance;


passthru: C.h;

#ifndef REXXSAA_INCLUDED
#define INCL_REXXSAA
#include <rexxsaa.h>                   /* needed for RexxStart()     */
#endif

#define MAXNUMEVENTS          32

#define WM_VPRSETVALUES   WM_USER

typedef struct _FORMEVENTSTRUCT {
   ULONG msg;
   PSZ   pszEventName;
   PSZ   pszAbbrevName;
   PSZ   pszModel;
   HPOINTER hptrIcon;
} FORMEVENTSTRUCT;
typedef FORMEVENTSTRUCT *PFORMEVENTSTRUCT;

typedef struct _VPEVENTITEM {
  PSZ pszDescName;    /* Descriptive name for the event */
  PSZ pszAbbrevName;  /* abbrev name for the object, ie. 1CLK */
  PSZ pszModel;       /* reserved must be zero */
  ULONG useFlags;     /* reserved must be zero */
  LONG lIconResID;    /* pointer resource id for the event */
  LONG lHelpID;       /* reserved */
  HPOINTER hptrIcon;  /* reserved */
} VPEVENTITEM;
typedef VPEVENTITEM *PVPEVENTITEM;

typedef struct _VPLOGICITEM {
  LONG lHelpID;        /* help panel id for the Create Link... item */
  PSZ pszDescName;     /* descriptive name for the REXX extension */
  PSZ pszModel;        /* function call prototype */
  ULONG menuUseFlags;  /* reserved */
  ULONG useFlags;      /* reserved */
  } VPLOGICITEM;
typedef VPLOGICITEM *PVPLOGICITEM;

typedef struct _VPCLASSINFO {
   ULONG cbSize;
   PSZ   pszDescName;        /* descriptive name of object              */
   PSZ   pszAbbrevName;      /* abbreviated name for the object, ie. PB */
   BOOL  bHasText;           /* does the object support direct editing  */
   PSZ   pszDefaultText;     /* default text for controls that have it  */
   BOOL  bHasCtrlData;       /* does the object have create data        */
   PSZ   pszWindowClass;     /* WC_* or the registered class name       */
   LONG  lDefaultWidth;      /* default width for a new object          */
   LONG  lDefaultHeight;     /* default height for a new object         */
   ULONG ulDefaultStyle;     /* default window style for a new object   */
   PVOID pDefaultCtrlData;   /* pointer to default control data         */
   HMODULE hModResource;     /* module handle for resource file         */
   LONG  lIconResID;         /* pointer resource id for the object      */
   LONG  lStyleDlgID;        /* style dialog id for the styles page     */
   PFNWP pfnwpStyleDlgProc;  /* address of the dialog style dialog proc */
   LONG  lToolHelpID;        /* id for the tool help                    */
   LONG  lStylesPageHelpID;  /* id for the styles notebook help         */
   HWND  hwndHelpInstance;   /* handle for the help instance            */
   LONG  lNumEvents;         /* number of events defined for this class */
   VPEVENTITEM Events[MAXNUMEVENTS];   /* event table for custom events */
   ULONG usTranslate[MAXNUMEVENTS]; //notification ids for each event wm_control
                             //unused entries hold 0
   PVPLOGICITEM Logic;       /* logic models for linking                */
   HPOINTER hptrIcon;        /* reserved                                */
   HPOINTER hptrMouse;       /* reserved                                */
   ULONG  ulReserved;        /* reserved                                */
   ULONG  ulReserved2;       /* reserved                                */

   } VPCLASSINFO;
typedef VPCLASSINFO *PVPCLASSINFO;


LONG TranslateObjSymbol(HWND hwnd, PSZ pszSymbol);

endpassthru;
methods:


    HWND    GetHwnd();

    -- 
    --   METHOD:   GetHwnd
    --   PURPOSE:  Get the objects window handle
    --   INVOKED:  From style dialog in editor session
    -- 

    VOID    IndicateChanged();

    -- 
    --   METHOD:   IndicateChanged
    --   PURPOSE:  Flag form as requiring writing to disk
    --   INVOKED:  From style dialog in editor session
    -- 

    VOID    RedrawObject();

    -- 
    --   METHOD:   RedrawObject
    --   PURPOSE:  Redraws the object
    --   INVOKED:
    -- 

    VOID    RecreateObject();

    -- 
    --   METHOD:   RecreateObject
    --   PURPOSE:  Recreates the object
    --   INVOKED:
    -- 

    HWND    InitHelpInstance(), class;

    -- 
    --   METHOD:   InitHelpInstance
    --   PURPOSE:  Time to initialize the help system for your object
    --   INVOKED:
    -- 

    VOID    QueryClassInfo(PVPCLASSINFO pVpClassInfo), class;

    -- 
    --   METHOD:   QueryClassInfo
    --   PURPOSE:  To set the information for the object class
    --   INVOKED:  At object creation
    -- 

    override somInitClass, class;

    -- 
    --   METHOD:   somInitClass
    --   PURPOSE:  Used to load the resource module and the tool icon,
    --             as well as do a WinRegisterClass if required
    --   INVOKED:  Upon class creation
    -- 

    HWND    QueryHelpInstance(), class;

    -- 
    --   METHOD:   QueryHelpInstance
    --   PURPOSE:  Querys the help instance class variable
    --   INVOKED:
    -- 

